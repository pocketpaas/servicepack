#!/usr/bin/perl

use strict;
use warnings;

use File::Temp qw(tempdir);
use Cwd;

my $OS_MAP = {
    'ubuntu/13.04' => 'lopter/raring-base:latest',
    'ubuntu/12.10' => 'ubuntu:12.10',
    'ubuntu/12.04' => 'ubuntu:12.04',
};

my $command = shift;

if ( $command eq 'build' ) {

    my $dir_to_build = shift;
    my $repo         = shift;
    my $tag          = shift || 'latest';

    my $query_script = "$dir_to_build/bin/query";

    -e $query_script || die "Unable to find query script.";

    my $os = `$query_script os`;
    chomp($os);
    $os || die "OS not defined.\n";
    my $docker_base = $OS_MAP->{$os} || die "No docker image for OS $os.\n";

    my $build_dir = tempdir( CLEANUP => 1 );

    system("tar -C $dir_to_build/ -cvf - . | tar -C $build_dir -xf -");

    open my $dockerfile, ">", "$build_dir/Dockerfile";
    print $dockerfile <<BUILD;
from $docker_base
add  . /service
run  /service/bin/build base
BUILD
    close $dockerfile;

    print "check out $build_dir\n";

    my $previous_dir = getcwd;
    chdir $build_dir;
    system("docker build -t $repo:$tag .");
    chdir $previous_dir;
}
else {
    my $image = shift;
    my $repo  = shift;
    my $tag   = shift || 'latest';

    #my $build_dir = tempdir( CLEANUP => 1 );
    my $build_dir = tempdir();

    # TODO generate secrets
    my $ENV_VARS = '';

    open my $dockerfile, ">", "$build_dir/Dockerfile";
    print $dockerfile <<BUILD;
from $image
env  MYSQL_ROOT_PASSWORD foobar
run  /service/bin/build setup
BUILD
    close $dockerfile;

    print "check out $build_dir\n";

    my $previous_dir = getcwd;
    chdir $build_dir;
    system("docker build -t $repo:$tag .");
    chdir $previous_dir;
}

